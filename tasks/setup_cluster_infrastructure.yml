---
- name: INFRASTRUCTURE SETUP - Declare ocp4_nodes and new_nodes list 
  set_fact:
    ocp4_nodes: []
    new_nodes: []
  tags: [deploy_nodes, rhcos]

- name: INFRASTRUCTURE SETUP - Create {{ virtinstall_dir }}
  file:
    path: "{{ virtinstall_dir }}"
    state: directory
    owner: "{{ local_user_account }}"
  register: create_virtinstall_dir
  tags: [deploy_nodes, rhcos]

## This may no longer be needed as it apprears the latest version
## of virt-install supports passing the initrd and kernel via the --install option
- name: INFRASTRUCTURE SETUP - Deploy virt-install .treeinfo file to {{ virtinstall_dir }}
  template:
    src: treeinfo.j2
    dest: "{{ virtinstall_dir }}/.treeinfo"
    mode: "u=rw,g=r,o=r"
    owner: "{{ local_user_account }}"
  tags: [deploy_nodes, rhcos]

- name: INFRASTRUCTURE SETUP - Ensure {{ USER_KUBECONFIG_DIR }} exist
  file:
    path: "{{ USER_KUBECONFIG_DIR }}"
    state: directory
    mode: '0755'
  become: true
  become_user: "{{ local_user_account }}"
  tags: [ postinstall, enable_shutdown, complete_install, bootstrap ]

- name: INFRASTRUCTURE SETUP - IdM DNS
  when: dns_server == 'idm'
  import_tasks: idm_dns.yml
  tags: [idm ]

## This should be optional when the var external_bridge_network is set to true
- name: INFRASTRUCTURE SETUP - Libvirt NAT network
  import_tasks: deploy_libvirt_network.yml
  tags: [libvirt_nat]
  when: not use_external_bridge

- name: INFRASTRUCTURE SETUP - Configure firewall
  import_tasks: firewall_setup.yml
  tags: [firewall]

- name: INFRASTRUCTURE SETUP - Deploy OpenShift client tools
  import_tasks: ocp4_tools.yml
  tags: [setup , tools, installer, rhcos]

- name: INFRASTRUCTURE SETUP - Generate the Ignition config files
  import_tasks: create_ignitions.yml
  tags: [ignitions, deploy_nodes, rhcos ]

- name: INFRASTRUCTURE SETUP -  Install Podman
  include_tasks: install_podman.yml
  when: not podman_is_installed.stat.exists
  tags: [podman, pkg, rhcos ]

## Downloads the kernel, initramfs, rootfs
- name: INFRASTRUCTURE SETUP - Download the RHCOS files
  import_tasks: download_rhcos_files.yml
  tags: [deploy_nodes, rhcos_files, download, webserver, rhcos ]

- name: INFRASTRUCTURE SETUP - Deploy the HAPROXY Podman container
  import_role:
    name: openshift-4-loadbalancer
    tasks_from: create.yml
  vars:
    lb_name: "{{ ocp4_lb_container }}"
    lb_api: "{{ tmp_api | join(',') }}"
    lb_api_listen: "{{ tmp_api_listen | join(',') }}"
    lb_ingress_http: "{{ tmp_ingress_http | join(',') }}"
    lb_ingress_http_listen: "{{ tmp_ingress_http_listen | join(',') }}"
    lb_ingress_https: "{{ tmp_ingress_https | join(',') }}"
    lb_ingress_https_listen: "{{ tmp_ingress_https_listen | join(',') }}"
    lb_machine_config_server: "{{ tmp_machine_config_server | join(',') }}"
    lb_machine_config_server_listen: "{{ tmp_machine_config_server_listen | join(',') }}"
  when: (container_exist is defined and not container_exist|bool) and not tear_down|bool
  tags: [lb, containers]

- name: INFRASTRUCTURE SETUP - Deploy the httpd webserver Podman container
  import_role:
    name: ocp4-bootstrap-webserver
  tags: [webserver, containers]

- name: INFRASTRUCTURE SETUP - Verify ignitions files are accessible from the webserver
  include_tasks: check_webserver.yml
  tags: [deploy_nodes, rhcos, rhcos_wait, add_computes ]

- name: INFRASTRUCTURE SETUP - Generate new ignitions when certs have changed
  import_tasks: new_compute_ign.yml
  when: approve_work_csr|bool
  tags: [ deploy_nodes, rhcos, node_profile, add_computes]

- name: INFRASTRUCTURE SETUP - General virt-install shell scripts for RHCOS nodes deployment
  include_tasks: build_cluster_nodes_profile.yml
  loop: "{{ ocp4_instances }}"
  loop_control:
    loop_var: outer_item
    label: outer_item.name
  tags: [deploy_nodes, rhcos, node_profile, add_computes ]

- name: INFRASTRUCTURE SETUP - Build a list of all libvirt VMs
  virt:
    command: list_vms
  register: all_vms
  tags: [ deploy_nodes, rhcos, bootstrap, add_workers, node_profile ]

- name: INFRASTRUCTURE SETUP - Run virt-install to create all RHCOS cluster nodes
  when: vm_name not in all_vms.list_vms
  vars:
    vm_name: "{{ item }}"
  shell: "{{ virtinstall_dir }}/{{ vm_name }}.sh"
  loop: "{{ ocp4_nodes }}"
  loop_control:
    label: "Installing RHCOS on VM {{ item }}"
  tags: [ deploy_nodes, rhcos, add_computes]

- name: INFRASTRUCTURE SETUP - Build a list of newly created RHCOS nodes
  vars:
    vm_name: "{{ item }}"
  set_fact:
    new_nodes: "{{ new_nodes + [ vm_name ] }}"
  when: vm_name not in all_vms.list_vms
  loop: "{{ ocp4_nodes }}"
  tags: [ deploy_nodes, rhcos, add_computes]

- name: INFRASTRUCTURE SETUP - Monitor RHCOS nodes installation progress
  vars:
    vm_name: "{{ item }}"
  virt:
    command: list_vms
    state: shutdown
  register: shutdown_vms
  until: vm_name in shutdown_vms.list_vms
  retries: 120
  delay: 30
  loop: "{{ new_nodes }}"
  loop_control:
    label: "RHCOS node {{ item }} installation is compeleted"
  tags: [ deploy_nodes, rhcos, rhcos_wait, bootstrap_shut, add_computes]

## There seems to be an issue where Libvirt IPtables rules are loaded
## This ensures the rules are loaded
- name: INFRASTRUCTURE SETUP - Restart libvirtd service
  systemd:
    state: restarted
    daemon_reload: yes
    name: libvirtd
  tags: [ deploy_nodes, bootstrap, add_computes ]
  
- name: INFRASTRUCTURE SETUP - Ensure all RHCOS nodes are started
  vars:
    vm_name: "{{ item }}"
  virt:
    name: "{{ vm_name }}"
    state: running
  loop: "{{ ocp4_nodes }}"
  delay: 10
  tags: [ deploy_nodes, bootstrap, add_computes ]

- name: INFRASTRUCTURE SETUP - Setup kubeconfig for user {{ local_user_account }}
  copy:
    src: "{{ project_dir }}/{{ ocp4_okd4 }}/auth/kubeconfig"
    dest: "/home/{{ local_user_account }}/.kube/config"
    owner: "{{ local_user_account }}"
    group: "{{ local_user_account }}"
    backup: yes
  tags: [ postinstall, enable_shutdown, complete_install, bootstrap]