---
- name: This is the immediate shutdown
  debug:
    msg: "Setting cluster to allow for immediate shutdown"
  tags: [ postinstall, enable_shutdown ]

- name: create {{ openshift_install_dir }}/kubelet-bootstrap-cred-manager-ds.yaml
  template:
    src: files/kubelet-bootstrap-cred-manager-ds.yaml
    dest:  "{{ openshift_install_dir }}/kubelet-bootstrap-cred-manager-ds.yaml"
    owner: root
    group: root
    mode: 0666
  tags: [ postinstall, enable_shutdown ]

- name: get all operators
  shell: /usr/local/bin/oc get clusteroperators --no-headers=true | awk '{print $1}'
  register: all_operators
  changed_when: False
  environment:
    KUBECONFIG: "{{ ocp_cluster_admin_kubeconfig }}"
  tags: [ postinstall, enable_shutdown ]

- name: check if daemonset kubelet-bootstrap-cred-manager was deployed
  shell: |
    /usr/local/bin/oc get daemonset --namespace openshift-machine-config-operator| grep kubelet-bootstrap-cred-manager
  register: bootstrap_cred_manager
  changed_when: False
  ignore_errors: yes
  environment:
    KUBECONFIG: "{{ ocp_cluster_admin_kubeconfig }}"
  tags: [ postinstall, enable_shutdown ]

- name: show kubelet-bootstrap-cred-manager
  debug:
    var: bootstrap_cred_manager
  tags: [ postinstall, enable_shutdown ]
  

- name: enable cluster to stop and resume cluster VMs
  block:
   - name: apply daemonset openshift-machine-config-operator
     shell: |
       /usr/local/bin/oc apply -f {{ openshift_install_dir }}/kubelet-bootstrap-cred-manager-ds.yaml
     register: applied_daemonset
     until: applied_daemonset.rc !=0
     retries: 25
     changed_when: False
     ignore_errors: yes

   - name: fail when daemonset apply unsuccesful
     fail:
       msg: "Failed to apply daemonset openshift-machine-config-operator"
     when: applied_daemonset.rc != 0

   - name: Get csr-signer-signer and csr-signer from the openshift-kube-controller-manager-operator namespace
     shell: |
       /usr/local/bin/oc get secrets/csr-signer-signer secrets/csr-signer -n openshift-kube-controller-manager-operator
     register: get_secrets
     changed_when: False
     ignore_errors: yes
     when: applied_daemonset.rc != 0

   - name: Delete the secrets csr-signer-signer and csr-signer from the openshift-kube-controller-manager-operator namespace
     shell: |
       /usr/local/bin/oc delete secrets/csr-signer-signer secrets/csr-signer -n openshift-kube-controller-manager-operator
     register: csr_deleted
     changed_when: False
     ignore_errors: yes
     when:
     - applied_daemonset.rc != 0
     - output.stdout.find("csr-signer") != -1

   - name: fail when csr and secrets is unsuccessful
     fail:
       msg: "secrets csr-signer-signer and csr-signer from the openshift-kube-controller-manager-operator namespace failed"
     when: csr_deleted.rc is defined and csr_deleted.rc !=0

   - name: check all operators
     debug:
       msg: "{{ item }}"
     loop: "{{ all_operators.stdout_lines }}"

   - name: wait until operator status is false
     shell: |
      /usr/local/bin/oc get clusteroperator "{{ item }}" -o=jsonpath='{range .status.conditions[*]}{.type}{" "}{.status}{" "}{.message}{"\n"}{end}'|awk '/Progressing/ {print $2}'
     register: operator_status
     loop: "{{ all_operators.stdout_lines }}"
     retries: 20
     delay: 10
     until: not operator_status.stdout | bool
     changed_when: False
  when: bootstrap_cred_manager.rc == 0
  environment:
    KUBECONFIG: "{{ ocp_cluster_admin_kubeconfig }}"
  tags: [ postinstall, enable_shutdown ]
