---
- name: check local-storage
  include: configure-local-storage-checks.yml

- name: deploy the localstorage operator
  block:
    - name: Get local operator version
      shell: |
        {{ oc_descr_pkgsmanifest_cmd }} | grep Name: | grep -v "Display\|storage\|Red Hat" | grep {{ ocp4_dependencies_version }}  | awk '{print $2}'
      environment:
        KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
      register: operator_version_check
      become: no

    - name: setting localstorage-operator version
      set_fact:
        operator_version: "{{ operator_version_check.stdout }}"

    - name: Copying over localstorage operator template
      template:
        src: templates/localstorage-operator.yaml.j2
        dest:  "{{ openshift_install_dir }}/localstorage-operator.yaml"
        owner: "{{ admin_user }}"
        group: "{{ admin_user }}"
        mode: 0666

    - name: Create and Subscribe to the local-storage Catalog
      command: "/usr/local/bin/oc apply -f {{ openshift_install_dir }}/localstorage-operator.yaml"
      environment:
        KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
      when: not delete_deployment|bool

    - name: Waiting for  local-storage-operator pod to be deployed
      shell: |
        /usr/local/bin/oc get pods -n "{{ localstorage_namespace }}"| grep Running | grep local-storage-operator |  wc -l
      environment:
        KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
      register: install_status_pod
      when: not delete_deployment|bool
      until: "'1' in install_status_pod.stdout"
      retries: 60
      delay: 15
  when: not namespace_exist and not local_storage_operator_exist

- name: Unset variables
  set_fact:
    namespace_exist:
    local_storage_operator_pods_exist:
    local_storage_operator_exist:

- name: check local-storage
  include: configure-local-storage-checks.yml

- name: list all libvirt vms
  virt:
    command: list_vms
  changed_when: False
  register: all_vms
  tags: [ deploy_nodes, rhcos, bootstrap, localstorage ]

- name: initialize and empty list of all the ocp4 nodes
  set_fact:
    ocp4_master_nodes: [ '' ]
  tags: [ deploy_nodes, rhcos, localstorage ]

- name: add master nodes to ocp4 nodes list
  vars:
    vm_name: "{{ ctrlplane_node_name }}-{{ '%00x' |format(item) }}"
  set_fact:
    ocp4_master_nodes: "{{ ocp4_master_nodes + [ vm_name ] }}"
  loop: "{{ range(0, ctrlplane_count|int)|list }}"


- name: initialize and empty list of all the ocp4 nodes
  set_fact:
    ocp4_compute_nodes: [ '' ]
  tags: [ deploy_nodes, rhcos, localstorage ]

- name: add compute nodes to ocp4 nodes list
  vars:
    vm_name: "{{ compute_node_name }}-{{ '%00x' |format(item) }}"
  set_fact:
    ocp4_compute_nodes: "{{ ocp4_compute_nodes + [ vm_name ] }}"
  loop: "{{ range(0, compute_node_count|int)|list }}"

- name: provision local volumes
  block:
    - name: create a filesystem local volume resource
      block:
        - name: Copying over localstorage customer resource filesystem template
          template:
            src: templates/localstorage-filesystem.yaml.j2
            dest:  "{{ openshift_install_dir }}/localstorage-filesystem.yaml"
            owner: "{{ admin_user }}"
            group: "{{ admin_user }}"
            mode: 0666

        - name: Provision the localstroage custom resource type filesystem
          command: "/usr/local/bin/oc create -f {{ openshift_install_dir }}/localstorage-filesystem.yaml"
          environment:
            KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
          when: not delete_deployment|bool and localvol_filesystem_sc.rc != 0
      when: localstorage_filesystem|bool

    - name: create a block local volume resource
      block:
        - name: Copying over localstorage custom resource block template
          template:
            src: templates/localstorage-block.yaml.j2
            dest:  "{{ openshift_install_dir }}/localstorage-block.yaml"
            owner: "{{ admin_user }}"
            group: "{{ admin_user }}"
            mode: 0666

        - name: Provision the localstorage custom resource block storage
          command: "/usr/local/bin/oc create -f {{ openshift_install_dir }}/localstorage-block.yaml"
          environment:
            KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
          when: not delete_deployment|bool  and localvol_block_sc.rc != 0
      when: localstorage_block|bool

    - name: Remove to the local-storage localstorage-filesystem.yaml
      command: "/usr/local/bin/oc delete -f {{ openshift_install_dir }}/localstorage-filesystem.yaml"
      environment:
        KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
      when: delete_deployment|bool
      ignore_errors: yes
      tags: [ localstorage ]

    - name: Remove to the local-storage localstorage-block.yaml
      command: "/usr/local/bin/oc delete -f {{ openshift_install_dir }}/localstorage-block.yaml"
      environment:
        KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
      ignore_errors: yes
      when: delete_deployment|bool
      tags: [ localstorage ]

    - name: Remove to the local-storage Subscription
      command: "/usr/local/bin/oc delete -f {{ openshift_install_dir }}/localstorage-operator.yaml"
      environment:
        KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
      when: delete_deployment|bool
      ignore_errors: yes
      tags: [ localstorage ]

    - name: Delete localstroage project
      command: "/usr/local/bin/oc delete project local-storage"
      environment:
        KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
      ignore_errors: yes
      when: delete_deployment|bool
      tags: [ localstorage ]
  when: namespace_exist  and local_storage_operator_exist
