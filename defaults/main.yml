---
##****************************
## DNS Server backend
## Currently only IdM is supported
dns_server: 'idm'
idm_fwd_zone_state: present
idm_ptr_zone_state: present
idm_record_state: present

##****************************
## OCP Nodes Networking Info
##
## By default, ocp is deployed on a libvirt NAT network.
## Most of these values does not require changing unless
## you plan to customize your installation

## Define the subnet that the ocp nodes will live on
ocp4_subnet: 192.168.50.0
mask: 255.255.255.0


## Name of the libvirt nat network
libvirt_network_name: qubinat

## Name of the libvirt bridge network
external_bridge_network: qubinet

## Set this to true to use the libvirt bridge network
use_external_bridge: false 

## The ocp subnet gateway ip. This ip is also used by the load balancer
## to listen on for incoming connections to the cluster
ocp4_gateway_ip: "{{ ocp4_subnet.split('.')[:3] | join('.')}}.1"

## IP addresses for bootstreap and api endpoints can be provided
bootstrap_octet: '2'
api_int_octet: '1'
api_octet: '1'
bootstrap_ip: "{{ ocp4_subnet.split('.')[:3] | join('.')}}.{{ bootstrap_octet }}"

## Mac address start for nodes
mac_start: "52:54:00:"

## The kubernetes internal api endpoint points to the gateway on the nat interface
## this only needs to be resolvable by the nodes within the same subnet
api_int_ip: "{{ ocp4_gateway_ip.split('.')[:3] | join('.') }}.{{ api_int_octet }}"

## The kubernetes api is pointed to the kvm host ip
## the kvmhost is running a podman haproxy. This needs to be
## resolvable by both internal and external clients
api_ip: "{{ kvm_host_ip }}"

## PTR definition for created IdM reverse zone record
bootstrap_ptr: "{{ bootstrap_octet }}"
api_int_ptr: "{{ api_int_octet }}"

## This only defined because the ansible idm module requires a PTR value
## This is not created.
api_ip_ptr: "{{ api_int_octet }}"

## The forward and reverse IP address for the ctrl and worker nodes are
## autogeneated in a sequence. Starting from the defined starting octet
## below.
ctrlplane_ip_octet: 10
compute_ip_octet: 20
storage_ip_octet: 30

## The hostname or hostname prefix for nodes
ctrlplane_node_name: "qbn-ctrlplane"
bootstrap_node_name: "qbn-bootstrap"
compute_node_name: "qbn-compute"
storage_node_name: "qbn-storage"

## END - OCP Nodes Networking Info
##********************************

## How many of each node should be deployed
## The minimum for ctrl nodes is 3
ctrlplane_count: 3
compute_count: 3

## This is same as above, the above var is used by previous versions of this code.
## The below is the current var name being used.
compute_node_count: "{{ compute_count }}"


# defaults file for ocp4-rhcos-vms
admin_user: admin
project_dir:  /home/{{ admin_user }}/qubinode-installer/
pull_secret: /home/{{ admin_user }}/qubinode-installer/pull-secret.txt

# This should be updated if you delete the kubeadmin user
# You will need to setup a kubeconfig for the cluster admin
# user.
ocp_cluster_admin_kubeconfig: "{{ openshift_install_dir }}/auth/kubeconfig"

# OCP release info
ocp4_okd4: ocp4
ocp4_ystream_release: 4.8
ocp4_release: 4.8.3
ocp4_image: 4.8.3
ocp4_image_version: "{{ ocp4_image }}"
ocp4_dependencies_version: "{{ ocp4_ystream_release }}"
ocp4_openshift_stroage_version: "{{ ocp4_ystream_release }}"
ocp4_client_version: 4.8.3
ocp4_release_dir: "{{ ocp4_release }}"
ocp4_release_url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest"

openshift_install_folder: ocp4
ocp4_client: "openshift-client-linux.tar.gz"
ocp4_installer: "openshift-install-linux.tar.gz"
ocp_install_cmd: /usr/local/bin/openshift-install
ocp_client_cmd: /usr/local/bin/oc
tools_missing: false


# OpenShift Dependencies
#coreos_installer_kernel: "rhcos-{{ major_version }}-x86_64-live-kernel-x86_64"
#coreos_installer_initramfs: "rhcos-{{ major_version }}-x86_64-live-initramfs.x86_64.img"
#coreos_metal_bios: "rhcos-{{ major_version }}-x86_64-metal.x86_64.raw.gz"
coreos_installer_kernel: "rhcos-live-kernel-x86_64"
coreos_installer_initramfs: "rhcos-live-initramfs.x86_64.img"
coreos_metal_bios: "rhcos-metal.x86_64.raw.gz"

# treeinfo
family_tree: "Red Hat CoreOS"

# add compute nodes
add_computes: no

# Set to yes when expanding the qcow template from the default 10G
expand_os_disk: no

# set to true to tear down the cluster
tear_down: no

# set to yes to run smoketest after cluster is deployed
smoketest_cluster: no

# set to no to not deploy cluster
deploy_cluster: yes

# set to true to startup cluster
startup_cluster: no

## Set this to yes to skip failing the playbook if the bootstrap verficiation fails
bootstrap_precheck: no

# set to true to shutdown cluster
shutdown_cluster: no

## set to false to stop checking of existing cluster
## This var is being phased out
check_existing_cluster: yes

# cluster deployed message
cluster_deployed_msg: "not deployed"

# ssh command options
ssh_options: "-q -o StrictHostKeyChecking=no -o BatchMode=yes"

# set to configure local storaage
configure_local_storage: no
compute_vdb_size: 10
compute_vdx_size: 10

## Set to no to disable create a NFS provisioner
## This should be removed since the NFS provisioner is
## now the default storage option
configure_nfs_storage: yes

# deploy OCS persistent storage
configure_ocs_storage: yes
# Set Default storage class for OCS
# Options below 
# ocs-storagecluster-ceph-rbd
# ocs-storagecluster-ceph-rgw
# ocs-storagecluster-cephfs
# openshift-storage.noobaa.io
set_default_ocs_storage_class: 'true' 
osc_storage_class_name: ocs-storagecluster-ceph-rbd

## Default user kubeconfig directory
USER_KUBECONFIG_DIR: /home/{{ local_user_account  }}/.kube


kvm_host_ip: ""
listen_address: "{{ kvm_host_ip }}"

ocp4_lb_container: qbn-lb
lb_name: "{{ ocp4_lb_container }}"
deploy_ocp4_configs: yes



# Ignition creation variables
openshift_install_dir: ""
external_domain_name: lab.example
internal_domain_name: lab.example
ssh_ocp4_public_key: ""

## Libvirt os variant
os_variant: 'rhel-unknown'

virtinstall_dir: /tmp/rhcos
#######################
# Configure Network 
local_user_account: admin
#subnet: 192.168.50.0
#gateway: 192.168.50.1
cluster_name: qbn
dns_domain: lab.example
dns_server_ip: 192.168.8.10

bootstrap_webserver_ip: "{{ kvm_host_ip }}"
#ocp4_image_version: 4.7.0
#ocp4_dependencies_version: 4.7.0
rhcos_ignition_url: "http://{{ bootstrap_webserver_ip }}:8080/pub/{{ ocp4_dependencies_version }}/ignitions"
rhcos_ignition: "{{ rhcos_ignition_url}}/{{ vm_type }}.ign"
coreos_rootfs: "rhcos-live-rootfs.x86_64.img"
rhcos_qcow_image: "rhcos-qemu.x86_64.qcow2.gz"
webserver_directory: /opt/qubinode_webserver
webserver_images: "{{ webserver_directory }}/{{ ocp4_dependencies_version }}/images"

## hostname for RHCOS cluster nodes
hostname_prefix: "{{ instance_prefix }}-ocp4"

coreos_rootfs_url: "http://{{ bootstrap_webserver_ip }}:8080/pub/{{ ocp4_dependencies_version }}/images/{{ coreos_rootfs }}"
kvm_host_libvirt_dir: /var/lib/libvirt/images
libvirt_network_mode: nat
libivrt_network_domain: compute.local
pull_secret_request: https://cloud.redhat.com/openshift/install/metal/user-provisioned
compute_local_storage: no

## Interface all nodes will have
node_primary_nic: enp1s0
ocp4_instances:
  - name: ctrlplane
    hd_size: 120G
    memory_size: 16192
    cpu_size: 4
    extra_storage:
    - size: "{{ compute_vdb_size }}G"
      name: vdb
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdc
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdd
      enable: "{{ compute_local_storage }}"
    qty: "{{ ctrlplane_count }}"
    vm_type: ctrlplane
    ip_octet: "{{ ctrlplane_ip_octet }}"
  - name: compute
    hd_size: 120G
    memory_size: 16192
    cpu_size: 4
    extra_storage:
    - size: "{{ compute_vdb_size }}G"
      name: vdb
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdc
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdd
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vde
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdf
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdg
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdh
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdi
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdj
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdk
      enable: "{{ compute_local_storage }}"
    - size: "{{ compute_vdx_size }}G"
      name: vdl
      enable: "{{ compute_local_storage }}"
    qty: "{{ compute_node_count }}"
    vm_type: worker
    ip_octet: "{{ compute_ip_octet }}"
  - name: bootstrap
    hd_size: 120G
    memory_size: 16192
    cpu_size: 2
    extra_storage:
      - size: ""
        name: vdb
        enable: false
      - size: ""
        name: vdc
        enable: false
    qty: 1
    vm_type: bootstrap
    ip_octet: 30

ocp4_firewall_ports:
  - 8080/tcp
  - 80/tcp
  - 443/tcp
  - 6443/tcp
  - 22623/tcp
  - 32700/tcp
  - 2049/tcp
  - 2049/udp

podman_pkgs:
  - podman
  - buildah
  - skopeo
  - slirp4netns
  - nfs-utils

# Defaults for additional compute
approve_work_csr: false

# RHCOS default username
rhcos_user: core

# Set to yes to indicate the cluster has been deployed
cluster_install_status: no

# localstorage
localstorage_namespace: openshift-local-storage
localstorage_version: "{{ ocp4_ystream_release }}"
localstorage_filesystem: true
localstorage_block: false
localstorage_block_disk: 
  - /dev/vdc
  - /dev/vdd
  - /dev/vde
  - /dev/vdf
  - /dev/vdg
  - /dev/vdh
  - /dev/vdi
  - /dev/vdj
  - /dev/vdk
  - /dev/vdl
localstorage_ctrl_fs_disk:
  - /dev/vdb
  - /dev/vdc
  - /dev/vdd
localstorage_fs_disk: 
  - /dev/vdc
  - /dev/vdd
  - /dev/vde
  - /dev/vdf
  - /dev/vdg
  - /dev/vdh
  - /dev/vdi
  - /dev/vdj
  - /dev/vdk
  - /dev/vdl

# Configure OpenShit Storage
configure_openshift_storage: false
ocs_drive_mount: /dev/vdb

# Defaults for NFS Provisioner role
provision_nfs_server: true
nfs_client_subnet: "{{ ocp4_subnet }}/24"
nfs_server_directory_path: /export
provision_nfs_provisoner: true
configure_registry: yes
nfs_server_ip: 192.168.50.1
registry_pvc_size: 100Gi
storage_class_result: true
openshift_token: 1234567890
openshift_url: https://ctrlplane.example.com:6443 #https://ctrlplane.example.com for openshift 3
openshift_version: ocp4
project_namespace: nfs-provisioner
set_as_default: false
delete_deployment: false
insecure_skip_tls_verify: true

# this is temporary and should be updated to grab the type from ocp4_instances
nodes_types:
  - master
  - worker
  - bootstrap

ocp_install_cmd: /usr/local/bin/openshift-install